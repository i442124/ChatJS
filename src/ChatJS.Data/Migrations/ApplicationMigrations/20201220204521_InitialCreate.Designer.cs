// <auto-generated />
using System;
using ChatJS.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ChatJS.Data.Migrations.ApplicationMigrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20201220204521_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("ChatJS.Domain.Chatlogs.Chatlog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Chatlogs");
                });

            modelBuilder.Entity("ChatJS.Domain.Memberships.Membership", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("UserId", "ChatlogId");

                    b.HasIndex("ChatlogId");

                    b.ToTable("Memberships");
                });

            modelBuilder.Entity("ChatJS.Domain.Messages.Message", b =>
                {
                    b.Property<int>("Index")
                        .HasColumnType("int");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ChatlogId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CreatedByUserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Index", "CreatedBy", "ChatlogId");

                    b.HasIndex("ChatlogId");

                    b.HasIndex("CreatedByUserId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatJS.Domain.Users.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameUid")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ChatJS.Domain.Memberships.Membership", b =>
                {
                    b.HasOne("ChatJS.Domain.Chatlogs.Chatlog", "Chatlog")
                        .WithMany("Memberships")
                        .HasForeignKey("ChatlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatJS.Domain.Users.User", "User")
                        .WithMany("Memberships")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Chatlog");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ChatJS.Domain.Messages.Message", b =>
                {
                    b.HasOne("ChatJS.Domain.Chatlogs.Chatlog", "Chatlog")
                        .WithMany("Messages")
                        .HasForeignKey("ChatlogId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ChatJS.Domain.Users.User", "CreatedByUser")
                        .WithMany()
                        .HasForeignKey("CreatedByUserId");

                    b.Navigation("Chatlog");

                    b.Navigation("CreatedByUser");
                });

            modelBuilder.Entity("ChatJS.Domain.Chatlogs.Chatlog", b =>
                {
                    b.Navigation("Memberships");

                    b.Navigation("Messages");
                });

            modelBuilder.Entity("ChatJS.Domain.Users.User", b =>
                {
                    b.Navigation("Memberships");
                });
#pragma warning restore 612, 618
        }
    }
}
